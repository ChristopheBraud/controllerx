# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- dev
- refs/tags/*

pr:
- master
- dev

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'
    Python38:
      python.version: '3.8'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Prepare Python $(python.version)'
- script: pip install pipenv
  displayName: 'Install pipenv'
- script: pipenv run black apps/controllerx tests
  displayName: Formatter (black)
- script: pipenv run mypy apps/controllerx
  displayName: Typing (mypy)
- script: pipenv run flake8 apps/controllerx
  displayName: Styling (flake8)
- script: pipenv run pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=apps --cov-report=xml --cov-report=html
  displayName: 'Tests (pytest)'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
- task: GithubRelease@0
  condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
  displayName: 'Create GitHub Release'      
  inputs:
    gitHubConnection: github.com_xaviml
    repositoryName: xaviml/controllerx
    isPreRelease: ${{ contains(variables['Build.SourceBranchName'], 'b') }}